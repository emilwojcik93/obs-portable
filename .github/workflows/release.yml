name: OBS Studio IaC Release

on:
  push:
    branches: [main]
    paths:
      - "Deploy-OBSStudio.ps1"
      - "README.md"
  workflow_dispatch:
    # Allow manual triggering for testing

jobs:
  release:
    runs-on: windows-2025
    permissions:
      contents: write

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

       - name: Generate Version and Release Notes
         id: release_notes
         shell: pwsh
         run: |
           # Dynamic version calculation based on git tags and commits
           try {
             # Get latest tag
             $latestTag = git describe --tags --abbrev=0 2>$null
             if ($latestTag -match '^v?(\d+)\.(\d+)(?:\.(\d+))?') {
               $major = [int]$matches[1]
               $minor = [int]$matches[2]
               $patch = if ($matches[3]) { [int]$matches[3] } else { 0 }
             } else {
               $major = 3; $minor = 0; $patch = 0
             }
             
             # Check if there are commits since last tag
             $commitsSinceTag = git rev-list --count HEAD ^$latestTag 2>$null
             if ($commitsSinceTag -gt 0) {
               $patch++  # Increment patch version for new commits
             }
             
             $version = "$major.$minor.$patch"
           } catch {
             # Fallback version if git operations fail
             $version = "3.1.0"
           }
           
           echo "VERSION=$version" >> $env:GITHUB_OUTPUT
           
           # Generate simple release notes from recent commits
           $commitMessages = git log --pretty=format:"%s" -10 | Where-Object { $_ -match "^(üöÄ|‚úÖ|üîß|üõ†Ô∏è|üìö|üéØ|üîî|‚ö°|üêõ)" }
           $releaseNotes = @"
# OBS Studio Infrastructure as Code v$version

## Complete Enterprise-Ready Deployment Solution

### TLDR - Perfect One Command Setup
``````powershell
# Complete zero-touch enterprise setup (run in Terminal as Admin)
&([ScriptBlock]::Create((irm https://github.com/emilwojcik93/obs-portable/releases/latest/download/Deploy-OBSStudio.ps1))) -VerboseLogging -Force -InternalDisplay -PerformanceMode 50 -SilentDeployment -InstallAutoRecording -CreateDesktopShortcuts
``````

### Key Features
- Zero-Configuration Display Capture with auto-setup
- Default plugin installation (Input Overlay + OpenVINO on Intel)
- Template-based script system for maintainability
- WebSocket API enabled by default (optional for restricted networks)
- Desktop shortcuts with balloon notifications
- Prevents Safe Mode prompts with --disable-shutdown-check
- Enterprise auto-recording service with protection
- Complete process cleanup and graceful shutdown

### Recent Improvements
$($commitMessages -join "`n")

Perfect for enterprise deployment with zero user interaction required!
"@
           
           echo "RELEASE_NOTES<<EOF" >> $env:GITHUB_OUTPUT
           echo $releaseNotes >> $env:GITHUB_OUTPUT
           echo "EOF" >> $env:GITHUB_OUTPUT

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ steps.release_notes.outputs.VERSION }}
          name: "OBS Studio IaC v${{ steps.release_notes.outputs.VERSION }}"
          body: ${{ steps.release_notes.outputs.RELEASE_NOTES }}
          files: |
            Deploy-OBSStudio.ps1
            README.md
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Release Summary
        run: |
          echo "+ Released OBS Studio IaC v${{ steps.release_notes.outputs.VERSION }}"
          echo "Assets: Deploy-OBSStudio.ps1, README.md"
          echo "Remote execution ready!"
          echo ""
          echo "Usage:"
          echo '&([ScriptBlock]::Create((irm https://github.com/emilwojcik93/obs-portable/releases/latest/download/Deploy-OBSStudio.ps1))) -Force -SilentDeployment'
